<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo的文章写作语法</title>
    <link href="/2020/bdcb7848.html"/>
    <url>/2020/bdcb7848.html</url>
    
    <content type="html"><![CDATA[<h1 id="Welcome-to-Marxico"><a href="#Welcome-to-Marxico" class="headerlink" title="Welcome to Marxico"></a>Welcome to Marxico</h1><p>@(Sample notebook)[Marxico|Manual|Markdown]</p><p><strong>Marxico</strong> is a delicate Markdown editor for Evernote. With reliable storage and sync powered by Evernote, <strong>Marxico</strong> offers greate writing experience. </p><ul><li><strong>Versatile</strong> - supporting code highlight, <em>LaTeX</em> &amp; flow charts,  inserting images &amp; attachments by all means.</li><li><strong>Exquisite</strong> -  neat but powerful editor, featuring offline docs, live preview, and offering the <a href="http://marxi.co/client_en" target="_blank" rel="noopener">desktop client</a> and offline <a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">Chrome App</a>.</li><li><strong>Sophisticated</strong> - deeply integrated with Evernote, supporting notebook &amp; tags, two-way bind editing.   </li></ul><hr><p>[TOC]</p><h2 id="Introducing-Markdown"><a href="#Introducing-Markdown" class="headerlink" title="Introducing Markdown"></a>Introducing Markdown</h2><blockquote><p>Markdown is a plain text formatting syntax designed to be converted to HTML. Markdown is popularly used as format for readme files, … or in text editors for the quick creation of rich text documents.  - <a href="http://en.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">Wikipedia</a></p></blockquote><p>As showed in this manual, it uses hash(#) to identify headings, emphasizes some text to be <strong>bold</strong> or <em>italic</em>. You can insert a <a href="http://www.example.com" target="_blank" rel="noopener">link</a> , or a footnote[^demo]. Serveral advanced syntax are listed below, please press <code>Ctrl + /</code> to view Markdown cheatsheet.</p><h3 id="Code-block"><a href="#Code-block" class="headerlink" title="Code block"></a>Code block</h3><div class="hljs"><pre><code class="hljs python"><span class="hljs-meta">@requires_authorization</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">somefunc</span><span class="hljs-params">(param1=<span class="hljs-string">''</span>, param2=<span class="hljs-number">0</span>)</span>:</span>    <span class="hljs-string">'''A docstring'''</span>    <span class="hljs-keyword">if</span> param1 &gt; param2: <span class="hljs-comment"># interesting</span>        <span class="hljs-keyword">print</span> <span class="hljs-string">'Greater'</span>    <span class="hljs-keyword">return</span> (param2 - param1 + <span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> <span class="hljs-literal">None</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SomeClass</span>:</span>    <span class="hljs-keyword">pass</span><span class="hljs-meta">&gt;&gt;&gt; </span>message = <span class="hljs-string">'''interpreter</span><span class="hljs-string"><span class="hljs-meta">... </span>prompt'''</span></code></pre></div><h3 id="LaTeX-expression"><a href="#LaTeX-expression" class="headerlink" title="LaTeX expression"></a>LaTeX expression</h3><p>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Qty</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">1600 USD</td><td align="center">5</td></tr><tr><td align="left">Phone</td><td align="right">12 USD</td><td align="center">12</td></tr><tr><td align="left">Pipe</td><td align="right">1 USD</td><td align="center">234</td></tr></tbody></table><h3 id="Diagrams"><a href="#Diagrams" class="headerlink" title="Diagrams"></a>Diagrams</h3><h4 id="Flow-charts"><a href="#Flow-charts" class="headerlink" title="Flow charts"></a>Flow charts</h4><div class="hljs"><pre><code class="hljs flow">st&#x3D;&gt;start: Starte&#x3D;&gt;endop&#x3D;&gt;operation: My Operationcond&#x3D;&gt;condition: Yes or No?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre></div><h4 id="Sequence-diagrams"><a href="#Sequence-diagrams" class="headerlink" title="Sequence diagrams"></a>Sequence diagrams</h4><div class="hljs"><pre><code class="hljs sequence">Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks!</code></pre></div><blockquote><p><strong>Note:</strong> You can find more information:</p></blockquote><blockquote><ul><li>about <strong>Sequence diagrams</strong> syntax <a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">here</a>,</li><li>about <strong>Flow charts</strong> syntax <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">here</a>.</li></ul></blockquote><h3 id="Checkbox"><a href="#Checkbox" class="headerlink" title="Checkbox"></a>Checkbox</h3><p>You can use <code>- [ ]</code> and <code>- [x]</code> to create checkboxes, for example:</p><ul><li><input checked="" disabled="" type="checkbox"> Item1</li><li><input disabled="" type="checkbox"> Item2</li><li><input disabled="" type="checkbox"> Item3</li></ul><blockquote><p><strong>Note:</strong> Currently it is only partially supported. You can’t toggle checkboxes in Evernote. You can only modify the Markdown in Marxico to do that. Next version will fix this.  </p></blockquote><h3 id="Dancing-with-Evernote"><a href="#Dancing-with-Evernote" class="headerlink" title="Dancing with Evernote"></a>Dancing with Evernote</h3><h4 id="Notebook-amp-Tags"><a href="#Notebook-amp-Tags" class="headerlink" title="Notebook &amp; Tags"></a>Notebook &amp; Tags</h4><p><strong>Marxico</strong> add <code>@(Notebook)[tag1|tag2|tag3]</code> syntax to select notebook and set tags for the note. After typing <code>@(</code>, the notebook list would appear, please select one from it.  </p><h4 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h4><p><strong>Marxico</strong> would adopt the first heading encountered as the note title. For example, in this manual the first line <code>Welcome to Marxico</code> is the title.</p><h4 id="Quick-Editing"><a href="#Quick-Editing" class="headerlink" title="Quick Editing"></a>Quick Editing</h4><p>Note saved by <strong>Marxico</strong> in Evernote would have a red ribbon button on the top-right corner. Click it and it would bring you back to <strong>Marxico</strong> to edit the note. </p><blockquote><p><strong>Note:</strong> Currently <strong>Marxico</strong> is unable to detect and merge any modifications in Evernote by user. Please go back to <strong>Marxico</strong> to edit.</p></blockquote><h4 id="Data-Synchronization"><a href="#Data-Synchronization" class="headerlink" title="Data Synchronization"></a>Data Synchronization</h4><p>While saving rich HTML content in Evernote, <strong>Marxico</strong> puts the Markdown text in a hidden area of the note, which makes it possible to get the original text in <strong>Marxico</strong> and edit it again. This is a really brilliant design because:</p><ul><li>it is beyond just one-way exporting HTML which other services do;</li><li>and it avoids privacy and security problems caused by storing content in a intermediate server. </li></ul><blockquote><p><strong>Privacy Statement: All of your notes data are saved in Evernote. Marxico doesn’t save any of them.</strong> </p></blockquote><h4 id="Offline-Storage"><a href="#Offline-Storage" class="headerlink" title="Offline Storage"></a>Offline Storage</h4><p><strong>Marxico</strong> stores your unsynchronized content locally in browser storage, so no worries about network and broswer crash. It also keeps the recent file list you’ve edited in <code>Document Management(Ctrl + O)</code>.</p><blockquote><p><strong>Note:</strong> Although browser storage is reliable in the most time, Evernote is born to do that. So please sync the document regularly while writing.</p></blockquote><h2 id="Shortcuts"><a href="#Shortcuts" class="headerlink" title="Shortcuts"></a>Shortcuts</h2><p>Help    <code>Ctrl + /</code><br>Sync Doc    <code>Ctrl + S</code><br>Create Doc    <code>Ctrl + Alt + N</code><br>Maximize Editor    <code>Ctrl + Enter</code><br>Preview Doc <code>Ctrl + Alt + Enter</code><br>Doc Management    <code>Ctrl + O</code><br>Menu    <code>Ctrl + M</code></p><p>Bold    <code>Ctrl + B</code><br>Insert Image    <code>Ctrl + G</code><br>Insert Link    <code>Ctrl + L</code><br>Convert Heading    <code>Ctrl + H</code></p><h2 id="About-Pro"><a href="#About-Pro" class="headerlink" title="About Pro"></a>About Pro</h2><p><strong>Marixo</strong> offers a free trial of 10 days. After that, you need to <a href="http://marxi.co/purchase.html" target="_blank" rel="noopener">purchase</a> the Pro service. Otherwise, you would not be able to sync new notes. Previous notes can be edited and synced all the time.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p><strong>Marxico</strong> was first built upon <a href="http://dillinger.io" target="_blank" rel="noopener">Dillinger</a>, and the newest version is almost based on the awesome <a href="http://stackedit.io" target="_blank" rel="noopener">StackEdit</a>. Acknowledgments to them and other incredible open source projects!</p><h2 id="Feedback-amp-Bug-Report"><a href="#Feedback-amp-Bug-Report" class="headerlink" title="Feedback &amp; Bug Report"></a>Feedback &amp; Bug Report</h2><ul><li>Twitter: <a href="https://twitter.com/gock2" target="_blank" rel="noopener">@gock2</a></li><li>Email: <a href="mailto:&#x68;&#x75;&#x73;&#116;&#x67;&#111;&#99;&#107;&#x40;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;">&#x68;&#x75;&#x73;&#116;&#x67;&#111;&#99;&#107;&#x40;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></li></ul><hr><p>Thank you for reading this manual. Now please press <code>Ctrl + M</code> and click <code>Link with Evernote</code>. Enjoy your <strong>Marxico</strong> journey!</p><p>[^demo]: This is a demo footnote. Read the <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes" target="_blank" rel="noopener">MultiMarkdown Syntax Guide</a> to learn more. Note that Evernote disables ID attributes in its notes , so <code>footnote</code> and <code>TOC</code> are not actually working. </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo默认使用的文章永久链接</title>
    <link href="/2020/ab21860c.html"/>
    <url>/2020/ab21860c.html</url>
    
    <content type="html"><![CDATA[<p>在Hexo博客上添加可爱的Live 2D模型</p><div class="hljs"><pre><code class="hljs bash">npm install --save hexo-helper-live2d</code></pre></div><p>x.安装 hexo-admin，实现网页发布文章:</p><div class="hljs"><pre><code class="hljs bash">npm install --save hexo-admin</code></pre></div><p>然后打开 <a href="http://localhost:4000/admin/" target="_blank" rel="noopener">http://localhost:4000/admin/</a> 就可以看到管理页面</p><p>x. 安装abbrlink插件，在博客根目录（执行hexo命令的地方，解决文件名是中文的问题）安装插件：</p><div class="hljs"><pre><code class="hljs bash">npm install hexo-abbrlink --save</code></pre></div><p>修改 _config.yml 添加：</p><div class="hljs"><pre><code class="hljs yaml"><span class="hljs-comment"># abbrlink config 让文章链接变成随机名字</span><span class="hljs-attr">url:</span> <span class="hljs-string">http://yoursite.com</span><span class="hljs-attr">root:</span> <span class="hljs-string">/</span><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:abbrlink.html</span><span class="hljs-attr">permalink_defaults:</span>  <span class="hljs-attr">author_name:</span> <span class="hljs-string">index</span>  <span class="hljs-attr">abbrlink:</span>  <span class="hljs-attr">alg:</span> <span class="hljs-string">crc32</span>  <span class="hljs-comment"># 算法：crc16(default) and crc32</span>  <span class="hljs-attr">rep:</span> <span class="hljs-string">hex</span>    <span class="hljs-comment"># 进制：dec(default) and hex</span></code></pre></div><p>x .让 hexo在后台运行。安装pm2:</p><div class="hljs"><pre><code class="hljs bash">$ npm install -g pm2</code></pre></div><p>写一个执行脚本<br>在博客根目录下面创建一个hexo_run.js</p><div class="hljs"><pre><code class="hljs javascript"><span class="hljs-comment">//run</span><span class="hljs-keyword">const</span> &#123; exec &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">'child_process'</span>)exec(<span class="hljs-string">'hexo server'</span>,(error, stdout, stderr) =&gt; &#123;        <span class="hljs-keyword">if</span>(error)&#123;                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'exec error: $&#123;error&#125;'</span>)                <span class="hljs-keyword">return</span>        &#125;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'stdout: $&#123;stdout&#125;'</span>);        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'stderr: $&#123;stderr&#125;'</span>);&#125;)</code></pre></div><p>运行脚本 在根目录下执行:</p><div class="hljs"><pre><code class="hljs bash"><span class="hljs-comment"># pm2 start hexo_run.js</span></code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>V2RAY+WS+TLS的配置(caddy,nginx,apache)</title>
    <link href="/2019/a0b19a80.html"/>
    <url>/2019/a0b19a80.html</url>
    
    <content type="html"><![CDATA[<p>这是 apache 的配置 放到 VirtualHost *:443这个标签里面.</p><p>#使用之前需要在ssh下开启一下模块</p><div class="hljs"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> a2enmod ssl<span class="hljs-attribute">sudo</span> a2enmod proxy<span class="hljs-attribute">sudo</span> a2enmod proxy_wstunnel<span class="hljs-attribute">sudo</span> a2enmod proxy_http<span class="hljs-attribute">sudo</span> a2enmod rewrite<span class="hljs-attribute">sudo</span> a2enmod headers</code></pre></div><p>#Apache配置</p><div class="hljs"><pre><code class="hljs bash">vi /etc/apache2/sites-available/yourdomain.com.conf</code></pre></div><p>#有用的就是下面这一点.复制到你的配置文件里就可以了.开始</p><div class="hljs"><pre><code class="hljs apache"><span class="hljs-section">&lt;VirtualHost *:80&gt;</span>  <span class="hljs-attribute">Redirect</span> /  https://yourdomain.com.tk/<span class="hljs-section">&lt;/VirtualHost&gt;</span><span class="hljs-section">&lt;VirtualHost *:443&gt;</span><span class="hljs-attribute"><span class="hljs-nomarkup">ServerName</span></span> yourdomain.com.tk<span class="hljs-comment">#SSL</span><span class="hljs-attribute">SSLEngine</span> <span class="hljs-literal">On</span><span class="hljs-attribute">SSLCertificateFile</span> /etc/letsencrypt/live/yourdomain.com.tk/fullchain.pem<span class="hljs-attribute">SSLCertificateKeyFile</span> /etc/letsencrypt/live/yourdomain.com.tk/privkey.pem<span class="hljs-attribute">SSLCipherSuite</span> EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH<span class="hljs-attribute">SSLProtocol</span> <span class="hljs-literal">All</span> -SSLv2 -SSLv3<span class="hljs-attribute">SSLHonorCipherOrder</span> <span class="hljs-literal">On</span><span class="hljs-attribute"><span class="hljs-nomarkup">Header</span></span> always set Strict-Transport-Security <span class="hljs-string">"max-age=15768000"</span>    <span class="hljs-section">&lt;LocationMatch "/ws"&gt;</span>        <span class="hljs-attribute">ProxyPass</span> ws://127.0.0.1:8883/ws        <span class="hljs-attribute">ProxyAddHeaders</span> <span class="hljs-literal">Off</span>        <span class="hljs-attribute">ProxyPreserveHost</span> <span class="hljs-literal">On</span>        <span class="hljs-attribute">RequestHeader</span> set Host <span class="hljs-variable">%&#123;HTTP_HOST&#125;</span>s        <span class="hljs-attribute">RequestHeader</span> set X-Forwarded-For <span class="hljs-variable">%&#123;REMOTE_ADDR&#125;</span>s  <span class="hljs-section">&lt;/LocationMatch&gt;</span><span class="hljs-section">&lt;/VirtualHost&gt;</span></code></pre></div><p>#结束</p><p>#这是 nginx的配置.</p><div class="hljs"><pre><code class="hljs bash">location /ws &#123;proxy_redirect off;proxy_pass http://127.0.0.1:8883;proxy_http_version 1.1;proxy_set_header Upgrade <span class="hljs-variable">$http_upgrade</span>;proxy_set_header Connection <span class="hljs-string">"upgrade"</span>;proxy_set_header Host <span class="hljs-variable">$http_host</span>;&#125;</code></pre></div><p>#caddy的配置.</p><div class="hljs"><pre><code class="hljs bash">https://yourdomain.com &#123; root /etc/caddy/www timeouts none tls email@xxx.com gzip proxy /ws localhost:8883 &#123;  websocket  header_upstream -Origin  &#125;&#125;</code></pre></div><p>#v2ray服务端配置文件…</p><div class="hljs"><pre><code class="hljs json">&#123;    <span class="hljs-attr">"log"</span>: &#123;            <span class="hljs-attr">"access"</span>: <span class="hljs-string">"/var/log/v2ray/access.log"</span>,            <span class="hljs-attr">"error"</span>: <span class="hljs-string">"/var/log/v2ray/error.log"</span>,            <span class="hljs-attr">"loglevel"</span>: <span class="hljs-string">"warning"</span>    &#125;,    <span class="hljs-attr">"inbound"</span>: &#123;            <span class="hljs-attr">"port"</span>:<span class="hljs-number">8883</span> ,            <span class="hljs-attr">"listen"</span>:<span class="hljs-string">"127.0.0.1"</span>,            <span class="hljs-attr">"protocol"</span>: <span class="hljs-string">"vmess"</span>,            <span class="hljs-attr">"settings"</span>: &#123;                    <span class="hljs-attr">"clients"</span>: [&#123;                            <span class="hljs-attr">"id"</span>: <span class="hljs-string">"93e09eb8-004a-0000-0000-00000000000"</span>,                            <span class="hljs-attr">"level"</span>: <span class="hljs-number">1</span>,                            <span class="hljs-attr">"alterId"</span>: <span class="hljs-number">100</span>,                            <span class="hljs-attr">"security"</span>: <span class="hljs-string">"auto"</span>                    &#125;]            &#125;,            <span class="hljs-attr">"streamSettings"</span>:&#123;                    <span class="hljs-attr">"network"</span>:<span class="hljs-string">"ws"</span>,                    <span class="hljs-attr">"security"</span>: <span class="hljs-string">"auto"</span>,                    <span class="hljs-attr">"wsSettings"</span>:&#123;                            <span class="hljs-attr">"path"</span>: <span class="hljs-string">"/ws"</span>                            &#125;                    &#125;    &#125;,    <span class="hljs-attr">"outbound"</span>: &#123;            <span class="hljs-attr">"protocol"</span>: <span class="hljs-string">"freedom"</span>,            <span class="hljs-attr">"settings"</span>: &#123;&#125;&#125;</code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用SoftEther设置VPN Server</title>
    <link href="/2019/58cf373f.html"/>
    <url>/2019/58cf373f.html</url>
    
    <content type="html"><![CDATA[<h3 id="安装-SoftEther-笔记！"><a href="#安装-SoftEther-笔记！" class="headerlink" title="安装 SoftEther 笔记！"></a>安装 SoftEther 笔记！</h3><a id="more"></a><h6 id="Ubuntu-amp-amp-Debian-使用-SoftEther-VPN-搭建-VPN-Server"><a href="#Ubuntu-amp-amp-Debian-使用-SoftEther-VPN-搭建-VPN-Server" class="headerlink" title="Ubuntu &amp;&amp; Debian 使用 SoftEther VPN  搭建 VPN Server"></a>Ubuntu &amp;&amp; Debian 使用 <a href="https://www.softether.org" target="_blank" rel="noopener">SoftEther VPN</a>  搭建 VPN Server</h6><div class="hljs"><pre><code class="hljs bash"><span class="hljs-comment"># 更新软件包 </span>$ sudo apt-get update &amp;&amp; sudo apt-get upgrade<span class="hljs-comment"># 安装依赖 ubuntu &amp;&amp; debian</span>$ sudo apt-get install build-essential -y<span class="hljs-comment"># 下载服务端</span>wget https://github.com/SoftEtherVPN/SoftEtherVPN_Stable/releases/download/v4.34-9745-beta/softether-vpnserver-v4.34-9745-beta-2020.04.05-linux-x64-64bit.tar.gz<span class="hljs-comment"># 解压 </span>$ tar xzvf softether-vpnserver-v4.34-9745-beta-2020.04.05-linux-x64-64bit.tar.gz<span class="hljs-comment"># 编译</span>$ <span class="hljs-built_in">cd</span> vpnserver$ make<span class="hljs-comment">#编译的过程中会多次提示License Agreement的选择，想用就选Yes（type ‘1’）</span><span class="hljs-comment"># 更改目录位置</span>$ <span class="hljs-built_in">cd</span> ..$ mv vpnserver /usr/<span class="hljs-built_in">local</span>$ <span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/vpnserver/<span class="hljs-comment"># 更改权限</span>$ sudo chmod 600 *$ sudo chmod 700 vpnserver$ sudo chmod 700 vpncmd<span class="hljs-comment">#开机启动</span>$ vi /etc/rc.local<span class="hljs-comment"># 添加 /usr/local/vpnserver/vpnserver start</span><span class="hljs-comment"># exit 0</span></code></pre></div><h6 id="以上操作就安装完成！"><a href="#以上操作就安装完成！" class="headerlink" title="以上操作就安装完成！"></a>以上操作就安装完成！</h6><div class="hljs"><pre><code class="hljs bash">SoftEther创建问一个service，并配置开机自动启动。首先创建一个文件vim /etc/init.d/vpnserver，将以下内容粘贴进去：<span class="hljs-meta">#!/bin/sh</span><span class="hljs-comment"># chkconfig: 2345 99 01</span><span class="hljs-comment"># description: SoftEther VPN Server</span>DAEMON=/usr/<span class="hljs-built_in">local</span>/vpnserver/vpnserverLOCK=/var/lock/subsys/vpnserver<span class="hljs-built_in">test</span> -x <span class="hljs-variable">$DAEMON</span> || <span class="hljs-built_in">exit</span> 0<span class="hljs-keyword">case</span> <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span> <span class="hljs-keyword">in</span>start)    <span class="hljs-variable">$DAEMON</span> start    touch <span class="hljs-variable">$LOCK</span>    ;;stop)    <span class="hljs-variable">$DAEMON</span> stop    rm <span class="hljs-variable">$LOCK</span>    ;;restart)    <span class="hljs-variable">$DAEMON</span> stop    sleep 3    <span class="hljs-variable">$DAEMON</span> start    ;;*)    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Usage: <span class="hljs-variable">$0</span> &#123;start|stop|restart&#125;"</span>    <span class="hljs-built_in">exit</span> 1<span class="hljs-keyword">esac</span><span class="hljs-built_in">exit</span> 0<span class="hljs-comment"># 如果不存在/var/lock/subsys文件夹，则需要创建一个mkdir /var/lock/subsys。</span><span class="hljs-comment"># 启动</span>$ sudo chmod 755 /etc/init.d/vpnserver &amp;&amp; /etc/init.d/vpnserver start<span class="hljs-comment"># 开机自启动 Debian/Ubuntu</span>$ sudo update-rc.d vpnserver defaults$ <span class="hljs-built_in">cd</span> /var/<span class="hljs-built_in">local</span>/vpnserver/$ ./vpncmd    <span class="hljs-comment"># 选择1 "Management of VPN Server or VPN Bridge"</span>vpncmd&gt;enableRemote</code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu14.04下部署smokeping监控软件</title>
    <link href="/2019/2aeaaf7a.html"/>
    <url>/2019/2aeaaf7a.html</url>
    
    <content type="html"><![CDATA[<h5 id="Ubuntu-部署-Smokeping-监控软件"><a href="#Ubuntu-部署-Smokeping-监控软件" class="headerlink" title="Ubuntu 部署 Smokeping 监控软件"></a><strong>Ubuntu</strong> 部署 <strong>Smokeping</strong> 监控软件</h5><a id="more"></a><p>1.安装smokeping软件</p><div class="hljs"><pre><code class="hljs bash">sudo apt-get install smokeping -y</code></pre></div><p>2.编辑smokeping配置文件，不发送报警邮件。如有需要，可以后续添加。</p><div class="hljs"><pre><code class="hljs bash">sudo vi /etc/smokeping/config.d/pathnames<span class="hljs-comment">#注释掉这行</span><span class="hljs-comment">#sendmail = /usr/sbin/sendmail</span><span class="hljs-comment">#编辑 General 修改your-ip为服务器IP</span>sudo vi /etc/smokeping/config.d/Generalcgiurl = http://your-ip/cgi-bin/smokeping.cgi</code></pre></div><p>3.编辑apache配置文件。</p><div class="hljs"><pre><code class="hljs bash">sudo vim /etc/apache2/conf-available/serve-cgi-bin.conf</code></pre></div><div class="hljs"><pre><code class="hljs apache"><span class="hljs-section">&lt;IfModule mod_alias.c&gt;</span>        <span class="hljs-section">&lt;IfModule mod_cgi.c&gt;</span>                <span class="hljs-attribute">Define</span> ENABLE_USR_LIB_CGI_BIN        <span class="hljs-section">&lt;/IfModule&gt;</span>        <span class="hljs-section">&lt;IfModule mod_cgid.c&gt;</span>                <span class="hljs-attribute">Define</span> ENABLE_USR_LIB_CGI_BIN        <span class="hljs-section">&lt;/IfModule&gt;</span>        <span class="hljs-section">&lt;IfDefine ENABLE_USR_LIB_CGI_BIN&gt;</span>                <span class="hljs-attribute">ScriptAlias</span> /cgi-bin/ /usr/lib/cgi-bin/                <span class="hljs-section">&lt;Directory "/usr/lib/cgi-bin"&gt;</span>                        <span class="hljs-attribute">AllowOverride</span> None                        <span class="hljs-attribute"><span class="hljs-nomarkup">Options</span></span> +ExecCGI -MultiViews +SymLinksIfOwnerMatch                        <span class="hljs-attribute">Require</span> <span class="hljs-literal">all</span> granted                 <span class="hljs-section">&lt;/Directory&gt;</span>                        <span class="hljs-attribute">ScriptAlias</span> /smokeping/smokeping.cgi /usr/lib/cgi-bin/smokeping.cgi                        <span class="hljs-attribute">Alias</span> /smokeping /usr/share/smokeping/www                 <span class="hljs-section">&lt;Directory “/usr/share/smokeping/www”&gt;</span>                        <span class="hljs-attribute"><span class="hljs-nomarkup">Options</span></span> FollowSymLinks                <span class="hljs-section">&lt;/Directory&gt;</span>        <span class="hljs-section">&lt;/IfDefine&gt;</span><span class="hljs-section">&lt;/IfModule&gt;</span><span class="hljs-comment">#vim: syntax=apache ts=4 sw=4 sts=4 sr noet</span></code></pre></div><p>4.重启cgi,apache,smokeping</p><div class="hljs"><pre><code class="hljs bash">sudo a2enmod cgisudo service apache2 restartsudo service smokeping restart</code></pre></div><h5 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h5><h6 id="排错指南："><a href="#排错指南：" class="headerlink" title="排错指南："></a>排错指南：</h6><p><strong>一.</strong> 当apache2重启提示：</p><div class="hljs"><pre><code class="hljs bash">* Starting web server apache2   apache2: Could not reliably determine the server<span class="hljs-string">'s fully qualified domain name, </span><span class="hljs-string">... waiting apache2: Could not reliably determine the server'</span>s fully qualified domain name, using 127.0.1.1 <span class="hljs-keyword">for</span> ServerName</code></pre></div><p>解决的问题是：</p><div class="hljs"><pre><code class="hljs bash">sudo vi /etc/apache2/sites-available/default<span class="hljs-comment">#打开default文件后，在default文件顶端加入：</span>ServerName 127.0.0.1<span class="hljs-comment">#重启apache2 就不会提示上述错误了</span></code></pre></div><p><strong>二.</strong> 修改apache2的默认端口，默认网站目录和默认主页文档</p><div class="hljs"><pre><code class="hljs bash">1. 修改 /etc/apache2/ports.conf 将NameVirtualHost *:80Listen 80改为自己需要的端口NameVirtualHost *:9000Listen 90002，修改/etc/apache2/sites-available/default 将第一行的&lt;VirtualHost *:80&gt; 改为自己需要的端口 &lt;VirtualHost *:9000&gt;3，修改 /etc/init.d/apache2/httpd.conf 添加Servername localhost否则重启时会报如下错误 * Restarting web server apache2                                                 apache2: Could not reliably determine the server<span class="hljs-string">'s fully qualified domain name, using 127.0.1.1 for ServerName</span><span class="hljs-string"> ... waiting apache2: Could not reliably determine the server'</span>s fully qualified domain name, using 127.0.1.1 <span class="hljs-keyword">for</span> ServerName                                                                         4，重启apachesudo /etc/init.d/apache2 restart端口修改完毕。apache的端口修改为9000了。<span class="hljs-comment">###########################################</span>修改默认网站目录：/etc/apache2/sites-available/default 将/var/www 修改位你的路径: /var/www/GMG/修改默认主页文档：/etc/apache2/mods-available/dir.conf将 index.* 替换为 xxx.* 不过随apache2的版本不同 文件的放置位置不一样  输入这个命令 grep -iR DirectoryIndex /etc/apache2查看 DirectoryIndex 在apache2哪个文件里面。</code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>腾讯云服务器使用v2ray搭建socks代理及跳墙中转</title>
    <link href="/2019/4be3197a.html"/>
    <url>/2019/4be3197a.html</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Linux下搭建socks透明代理，通常都是使用dante。不过鉴于我们还有其他需求（跳墙中转），所以我们选择了使用最近比较热门的v2ray程序。</p><a id="more"></a><div class="hljs"><pre><code class="hljs plain">&#123;  &quot;log&quot; : &#123;    &quot;access&quot;: &quot;&#x2F;var&#x2F;log&#x2F;v2ray&#x2F;access.log&quot;,    &quot;error&quot;: &quot;&#x2F;var&#x2F;log&#x2F;v2ray&#x2F;error.log&quot;,    &quot;loglevel&quot;: &quot;warning&quot;  &#125;,  &quot;inbound&quot;: &#123;    &quot;port&quot;: 8866,    &quot;listen&quot;: &quot;0.0.0.0&quot;,    &quot;protocol&quot;: &quot;socks&quot;,    &quot;settings&quot;: &#123;      &quot;auth&quot;: &quot;password&quot;,      &quot;accounts&quot;: [        &#123;          &quot;user&quot;: &quot;my-socks&quot;,          &quot;pass&quot;: &quot;my-password&quot;        &#125;      ],      &quot;udp&quot;: true,      &quot;ip&quot;: &quot;腾讯云内网IP地址&quot;    &#125;,    &quot;tag&quot;: &quot;socks-in&quot;  &#125;,  &quot;outbound&quot;: &#123;    &quot;protocol&quot;: &quot;shadowsocks&quot;,    &quot;settings&quot;: &#123;      &quot;servers&quot;: [        &#123;          &quot;email&quot;: &quot;ss2@v2ray.com&quot;,          &quot;address&quot;: &quot;225.255.255.255&quot;,          &quot;port&quot;: 6656,          &quot;method&quot;: &quot;aes-256-cfb&quot;,          &quot;password&quot;: &quot;my-password&quot;,          &quot;ota&quot;: false        &#125;      ]    &#125;,    &quot;tag&quot;: &quot;ss-out&quot;  &#125;,  &quot;inboundDetour&quot;: [    &#123;      &quot;port&quot;: 8800,      &quot;listen&quot;: &quot;0.0.0.0&quot;,      &quot;protocol&quot;: &quot;vmess&quot;,      &quot;settings&quot;: &#123;        &quot;clients&quot;: [          &#123;            &quot;id&quot;: &quot;4119f123-3863-4d3e-aaf6-379fdda3a371&quot;,            &quot;level&quot;: 1,            &quot;alterId&quot;: 64,            &quot;email&quot;: &quot;vmess@v2ray.com&quot;          &#125;        ]      &#125;,      &quot;tag&quot;: &quot;v2ray-in&quot;    &#125;,    &#123;      &quot;port&quot;: 8899,      &quot;listen&quot;: &quot;0.0.0.0&quot;,      &quot;protocol&quot;: &quot;shadowsocks&quot;,      &quot;settings&quot;: &#123;        &quot;email&quot;: &quot;ss1@v2ray.com&quot;,        &quot;method&quot;: &quot;aes-256-cfb&quot;,        &quot;password&quot;: &quot;my-password&quot;,        &quot;udp&quot;: true,        &quot;level&quot;: 0,        &quot;ota&quot;: false      &#125;,      &quot;tag&quot;: &quot;ss-in&quot;    &#125;  ],  &quot;outboundDetour&quot;: [    &#123;      &quot;protocol&quot;: &quot;freedom&quot;,      &quot;settings&quot;: &#123;&#125;,      &quot;tag&quot;: &quot;direct&quot;    &#125;,    &#123;      &quot;protocol&quot;: &quot;blackhole&quot;,      &quot;settings&quot;: &#123;&#125;,      &quot;tag&quot;: &quot;blocked&quot;    &#125;,    &#123;      &quot;protocol&quot;: &quot;vmess&quot;,      &quot;settings&quot;: &#123;        &quot;vnext&quot;: [          &#123;            &quot;address&quot;: &quot;v2ray.cool&quot;,            &quot;port&quot;: 10086,            &quot;users&quot;: [              &#123;                &quot;id&quot;: &quot;a3482e88-686a-4a58-8126-99c9df64b7bf&quot;,                &quot;alterId&quot;: 64,                &quot;security&quot;: &quot;auto&quot;              &#125;            ]          &#125;        ]      &#125;,      &quot;mux&quot;: &#123;        &quot;enabled&quot;: true      &#125;,      &quot;tag&quot;: &quot;v2ray-out&quot;    &#125;  ],  &quot;dns&quot;: &#123;    &quot;servers&quot;: [      &quot;114.114.114.114&quot;,      &quot;114.114.115.115&quot;,      &quot;localhost&quot;    ]  &#125;,  &quot;routing&quot;: &#123;    &quot;strategy&quot;: &quot;rules&quot;,    &quot;settings&quot;: &#123;      &quot;domainStrategy&quot;: &quot;IPIfNonMatch&quot;,      &quot;rules&quot;: [        &#123;          &quot;type&quot;: &quot;field&quot;,          &quot;ip&quot;: [            &quot;0.0.0.0&#x2F;8&quot;,            &quot;10.0.0.0&#x2F;8&quot;,            &quot;100.64.0.0&#x2F;10&quot;,            &quot;127.0.0.0&#x2F;8&quot;,            &quot;169.254.0.0&#x2F;16&quot;,            &quot;172.16.0.0&#x2F;12&quot;,            &quot;192.0.0.0&#x2F;24&quot;,            &quot;192.0.2.0&#x2F;24&quot;,            &quot;192.168.0.0&#x2F;16&quot;,            &quot;198.18.0.0&#x2F;15&quot;,            &quot;198.51.100.0&#x2F;24&quot;,            &quot;203.0.113.0&#x2F;24&quot;,            &quot;::1&#x2F;128&quot;,            &quot;fc00::&#x2F;7&quot;,            &quot;fe80::&#x2F;10&quot;          ],          &quot;outboundTag&quot;: &quot;blocked&quot;        &#125;,        &#123;          &quot;type&quot;: &quot;field&quot;,          &quot;inboundTag&quot;: [            &quot;ss-in&quot;          ],          &quot;outboundTag&quot;: &quot;ss-out&quot;        &#125;,        &#123;          &quot;type&quot;: &quot;field&quot;,          &quot;domain&quot;: [            &quot;baidu.com&quot;,            &quot;qq.com&quot;          ],          &quot;outboundTag&quot;: &quot;direct&quot;        &#125;,        &#123;          &quot;type&quot;: &quot;chinaip&quot;,          &quot;outboundTag&quot;: &quot;direct&quot;        &#125;,        &#123;          &quot;type&quot;: &quot;chinasites&quot;,          &quot;outboundTag&quot;: &quot;direct&quot;        &#125;      ]    &#125;  &#125;&#125;</code></pre></div><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>申请Let’s Encrypt通配符HTTPS证书</title>
    <link href="/2019/664256ae.html"/>
    <url>/2019/664256ae.html</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Let’s Encrypt 发布的 ACME v2 现已正式支持通配符证书，接下来将为大家介绍怎样申请，Let’s go.</p><a id="more"></a><p>Let’s Encrypt 发布的 ACME v2 现已正式支持通配符证书，接下来将为大家介绍怎样申请，Let’s go.</p><p>注 本教程是在centos 7下操作的，其他Linux系统大同小异。</p><p>2018.03.15 20:48 更新了通过acme.sh方式获取证书的方法，墙裂推荐这种方法</p><p>一、acme.sh的方式<br>1.获取acme.sh</p><div class="hljs"><pre><code class="hljs plain">curl https:&#x2F;&#x2F;get.acme.sh | sh</code></pre></div><p>如下所示安装成功</p><p>image</p><p>注：我在centos 7上遇到问题，安装完后执行acme.sh，提示命令没找到，如果遇到跟我一样的问题，请再执行以下指令：</p><div class="hljs"><pre><code class="hljs plain">source ~&#x2F;.bashrc</code></pre></div><p>2.开始获取证书<br>acme.sh强大之处在于，可以自动配置DNS，不用去域名后台操作解析记录了，我的域名是在阿里注册的，下面给出阿里云解析的例子，其他地方注册的请参考这里自行修改：传送门</p><p>请先前往阿里云后台获取App_Key跟App_Secret 传送门，然后执行以下脚本</p><div class="hljs"><pre><code class="hljs plain"># 替换成从阿里云后台获取的密钥export Ali_Key&#x3D;&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;export Ali_Secret&#x3D;&quot;jlsdflanljkljlfdsaklkjflsa&quot;# 换成自己的域名acme.sh --issue --dns dns_ali -d zhuziyu.cn -d *.zhuziyu.cn这里是通过线程休眠120秒等待DNS生效的方式，所以至少需要等待两分钟</code></pre></div><p>到了这一步大功告成，撒花</p><p>acme.sh比certbot的方式更加自动化，省去了手动去域名后台改DNS记录的步骤，而且不用依赖Python，墙裂推荐😄</p><p>第一次成功之后，acme.sh会记录下App_Key跟App_Secret，并且生成一个定时任务，每天凌晨0：00自动检测过期域名并且自动续期。对这种方式有顾虑的，请慎重，不过也可以自行删掉用户级的定时任务，并且清理掉~/.acme.sh文件夹就行</p><p>二、 certbot方式获取证书[不推荐]<br>1.获取certbot-auto</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><div class="hljs"><pre><code class="hljs plain">wget https:&#x2F;&#x2F;dl.eff.org&#x2F;certbot-auto# 设为可执行权限chmod a+x certbot-auto</code></pre></div><p>2.开始申请证书</p><div class="hljs"><pre><code class="hljs plain"># 注xxx.com请根据自己的域名自行更改.&#x2F;certbot-auto --server https:&#x2F;&#x2F;acme-v02.api.letsencrypt.org&#x2F;directory -d &quot;*.xxx.com&quot; --manual --preferred-challenges dns-01 certonly</code></pre></div><p>执行完这一步之后，会下载一些需要的依赖，稍等片刻之后，会提示输入邮箱，随便输入都行【该邮箱用于安全提醒以及续期提醒】</p><p>注意，申请通配符证书是要经过DNS认证的，按照提示，前往域名后台添加对应的DNS TXT记录。添加之后，不要心急着按回车，先执行dig xxxx.xxx.com txt确认解析记录是否生效，生效之后再回去按回车确认</p><p>到了这一步后，大功告成！！！ 证书存放在/etc/letsencrypt/live/xxx.com/里面</p><p>要续期的话，执行certbot-auto renew就可以了</p><p>注：经评论区 ddatsh 的指点，这样的证书无法应用到主域名xxx.com上，如需把主域名也增加到证书的覆盖范围，请在开始申请证书步骤的那个指令把主域名也加上，如下： 需要注意的是，这样的话需要修改两次解析记录</p><div class="hljs"><pre><code class="hljs plain">.&#x2F;certbot-auto --server https:&#x2F;&#x2F;acme-v02.api.letsencrypt.org&#x2F;directory -d &quot;*.xxx.com&quot; -d &quot;xxx.com&quot; --manual --preferred-challenges dns-01 certonly</code></pre></div><p>下面是一个nginx应用该证书的一个例子</p><div class="hljs"><pre><code class="hljs plain">server &#123;    server_name xxx.com;    listen 443 http2 ssl;    ssl on;    ssl_certificate &#x2F;etc&#x2F;cert&#x2F;xxx.cn&#x2F;fullchain.pem;    ssl_certificate_key &#x2F;etc&#x2F;cert&#x2F;xxx.cn&#x2F;privkey.pem;    ssl_trusted_certificate  &#x2F;etc&#x2F;cert&#x2F;xxx.cn&#x2F;chain.pem;    location &#x2F; &#123;      proxy_pass http:&#x2F;&#x2F;127.0.0.1:6666;    &#125;&#125;</code></pre></div><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ocserv 安装记录</title>
    <link href="/2019/c4135fb1.html"/>
    <url>/2019/c4135fb1.html</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>ocserv 安装记录</p><a id="more"></a><p>ocserv 全称是 OpenConnect VPN Server。实现了 AnyConnect SSL VPN 协议，兼容 OpenConnection VPN 客户端。特点是体积小、安全和可配置。依赖标准协议如 TLS 1.2 和数据报文 TLS。</p><p>它通过实现Cisco的AnyConnect协议，用DTLS作为主要的加密传输协议。</p><p>开启内核ipv4转发</p><div class="hljs"><pre><code class="hljs plain">vim &#x2F;etc&#x2F;sysctl.conf将net.ipv4.ip_forward 设置为1net.ipv4.ip_forward &#x3D; 1保存执行 sysctl -p 添加防火墙流量转发(网卡名称以实际情况为准)iptables -t nat -A POSTROUTING -s 172.16.200.0&#x2F;24 -o eth0 -j MASQUERADEiptables -A FORWARD -s 172.16.200.0&#x2F;24 -j ACCEPTservice iptables save</code></pre></div><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Softether VPNClient Linux端配置及加入VPNServer过程</title>
    <link href="/2019/2ac27b95.html"/>
    <url>/2019/2ac27b95.html</url>
    
    <content type="html"><![CDATA[<p>准备重写！</p>]]></content>
    
    
    <categories>
      
      <category>日常笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu修改时区和更新时间</title>
    <link href="/2019/5b532a6f.html"/>
    <url>/2019/5b532a6f.html</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><center>Ubuntu修改时区和更新时间.</center><a id="more"></a><p>Ubuntu修改时区和更新时间<br>先查看当前系统时间</p><div class="hljs"><pre><code class="hljs plain">root@ubuntu:&#x2F;# date -R</code></pre></div><p>结果时区是：-0500<br>我需要的是东八区，这儿显示不是，所以需要设置一个时区</p><p>1.运行tzselect</p><div class="hljs"><pre><code class="hljs plain">root@ubuntu:&#x2F;# tzselect</code></pre></div><p>在这里我们选择亚洲 Asia，确认之后选择中国（China)，最后选择北京(Beijing)</p><p>2.复制文件到/etc目录下</p><div class="hljs"><pre><code class="hljs plain">root@ubuntu:&#x2F;# cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai  &#x2F;etc&#x2F;localtime</code></pre></div><p>3.再次查看时间date -R，已经修改为北京时间</p><p>改时间参考<br>修改时间</p><div class="hljs"><pre><code class="hljs plain">sudo date -s MM&#x2F;DD&#x2F;YY &#x2F;&#x2F;修改日期sudo date -s hh:mm:ss &#x2F;&#x2F;修改时间</code></pre></div><p>在修改时间以后，修改硬件CMOS的时间</p><div class="hljs"><pre><code class="hljs plain">sudo hwclock --systohc &#x2F;&#x2F;非常重要，如果没有这一步的话，后面时间还是不准</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>日常笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>升级 Ubuntu，解决登录时提示有软件包可以更新的问题</title>
    <link href="/2019/4bd2725e.html"/>
    <url>/2019/4bd2725e.html</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><center>升级 Ubuntu，解决登录时提示有软件包可以更新的问题。</center><a id="more"></a><p>Welcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.13.0–48-generic x86_64)</p><ul><li>Documentation: <a href="https://help.ubuntu.com/" target="_blank" rel="noopener">https://help.ubuntu.com/</a> System information as of Sat Jun 27 01:12:04 UTC 2015 System load: 0.0 Processes: 98 Usage of /: 10.6% of 9.71GB Users logged in: 0 Memory usage: 10% IP address for eth0: 192.168.12.233 Swap usage: 0%<br>Graph this data and manage this system at:<br><a href="https://landscape.canonical.com/" target="_blank" rel="noopener">https://landscape.canonical.com/</a> Get cloud support with Ubuntu Advantage Cloud Guest:<br><a href="http://www.ubuntu.com/business/services/cloud" target="_blank" rel="noopener">http://www.ubuntu.com/business/services/cloud</a> 91 packages can be updated. 39 updates are security updates.</li></ul><p>对于一般的更新，如果不影响使用，一般也就罢了。但是通常，如果系统提示有安全更新，大多数用户（特别是服务器管理员）还是会去更新的。不过，面对 Ubuntu 的这些提示，很多用户经常遇到「不管怎么apt-get updage &amp;&amp; apt-get upgrade也不见好」的问题。</p><p>升级命令<br>虽然 apt-get 经常被人诟病，但实际上它还是个挺好用的软件包管理器。在 Ubuntu 14.04 以后的系统中，apt-get 相关的升级更新命令有四个：</p><div class="hljs"><pre><code class="hljs plain">#####从服务器更新可用的软件包列表。update 根据列表，更新已安装的软件包。upgrade不会删除在列表中已经没有的软件包，也不会安装有依赖需求但尚未安装的软件包。#####upgrade 根据列表，更新已安装的软件包。full-upgrade可能会为了解决软件包冲突而删除一些已安装的软件包。#####apt-get full–upgrade根据列表，更新已安装的软件包。dist-upgrade可能会为了解决软件包冲突而删除一些已安装的软件包，也可能会为了解决软件包依赖问题安装新的软件包。#####dist-upgrade</code></pre></div><p>#####我们应该怎么做？依次执行如下命令即可：</p><div class="hljs"><pre><code class="hljs plain">apt-get update apt-get upgrade apt-get dist-upgraderebootapt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>日常笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
